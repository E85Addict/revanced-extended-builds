name: CI
on:
  workflow_dispatch:
  schedule:
    - cron: "0 */8 * * *"

jobs:
  check:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Should build?
        id: should_build
        shell: bash
        run: |
          source build.conf
          source utils.sh

          is_patches_latest() {
            declare -r last_patches_url=$(wget -nv -O- https://api.github.com/repos/inotia00/revanced-patches/releases/latest | json_get 'browser_download_url' 'jar')
            declare -r last_patches=${last_patches_url##*/}
            cur_patches=$(sed -n 's/.*Patches: \(.*\)/\1/p' build.md | xargs)

            echo "current patches version: $cur_patches"
            echo "latest patches version: $last_patches"
            [ "$cur_patches" != "$last_patches" ] # test success=>build, fail=>dont build
          }

          is_integrations_latest() {
            declare -r last_integrations="app-release-unsigned-$(curl -s GET https://api.github.com/repos/inotia00/revanced-integrations/tags\?per_page\=1 | jq -r '.[].name').apk"
            cur_integrations=$(sed -n 's/.*Integrations: \(.*\)/\1/p' build.md | xargs)

            echo "current integrations version: $cur_integrations"
            echo "latest integrations version: $last_integrations"
            [ "$cur_integrations" != "$last_integrations" ] # test success=>build, fail=>dont build
          }

          is_cli_latest() {
            declare -r last_cli_url=$(wget -nv -O- https://api.github.com/repos/inotia00/revanced-cli/releases/latest | json_get 'browser_download_url' 'jar')
            declare -r last_cli=${last_cli_url##*/}
            cur_cli=$(sed -n 's/.*CLI: \(.*\)/\1/p' build.md | xargs)

            echo "current cli version: $cur_cli"
            echo "latest cli version: $last_cli"
            [ "$cur_cli" != "$last_cli" ] # test success=>build, fail=>dont build
          }

          if ! git checkout update; then
            echo "first time building!"
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          elif is_patches_latest || is_integrations_latest || is_cli_latest; then
            echo "build!"
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          else
            echo "dont build!"
            echo "SHOULD_BUILD=0" >> $GITHUB_OUTPUT
          fi

    outputs:
      SHOULD_BUILD: ${{ steps.should_build.outputs.SHOULD_BUILD }}

  build:
    needs: check
    uses: ./.github/workflows/build.yml
    if: ${{ needs.check.outputs.SHOULD_BUILD == 1 }}
